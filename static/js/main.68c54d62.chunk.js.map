{"version":3,"sources":["components/filter/Filter.module.css","components/contactList/ContactList.module.css","components/contactForm/ContactForm.module.css","components/contactForm/ContactForm.js","components/filter/Filter.js","components/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/app/App.js","index.js","components/contactListItem/ContactListItem.module.css","components/app/App.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","contacts","find","contact","alert","addContact","this","className","styles","container","form","onSubmit","label","htmlFor","input","type","id","placeholder","onChange","btn","Component","Filter","filter","ContactListItem","onRemoveContact","map","item","onClick","ContactList","length","list","App","changeFilter","person","uuidv4","prevState","removeContact","contactId","getVisibleContacts","toLowerCase","includes","persistedContacts","localStorage","getItem","JSON","parse","setItem","stringify","visibleContacts","tytle","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.68c54d62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"find\":\"Filter_find__2aDc2\",\"input\":\"Filter_input__gcOWY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__PwVMA\",\"list\":\"ContactList_list__vgOtR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__2IkO6\",\"tytle\":\"ContactForm_tytle__2B9ye\",\"form\":\"ContactForm_form__3jj4_\",\"label\":\"ContactForm_label__2GY53\",\"input\":\"ContactForm_input__3A8St\",\"btn\":\"ContactForm_btn__ji0HF\"};","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.target;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (this.props.contacts.find(contact => contact.name === this.state.name)) {\r\n            alert(`${this.state.name} is already in contacts.`)\r\n        } else {\r\n            this.props.addContact({ name: this.state.name, number:this.state.number })\r\n            this.setState({\r\n                name: '',\r\n                number: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <form className={styles.form} onSubmit={this.handleSubmit}>\r\n                    <label className={styles.label} htmlFor=\"name\">Name</label>\r\n                    <input className={styles.input} type='text' id='name' name='name' placeholder=\"Name Surname\" value={name} onChange={this.handleChange} />\r\n                    <label className={styles.label} htmlFor='number'>Number</label>\r\n                    <input className={styles.input} type='text' id='number' name='number' placeholder=\"0667773377\" value={number} onChange={this.handleChange} />\r\n                    <button type=\"submit\" className={styles.btn}>Add contact</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport styles from './Filter.module.css';\r\n\r\nfunction Filter({filter, onChange}) {\r\n    return (\r\n        <>\r\n            <label className={styles.find}>Find contacts by name</label>\r\n            <input className={styles.input} type='text' placeholder=\"name\" value={filter} onChange={e => onChange(e.target.value)}/>\r\n        </>    \r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nfunction ContactListItem({contacts, onRemoveContact}) {\r\n    return (\r\n        <>\r\n            {\r\n                contacts.map(contact => (\r\n                    <li className={styles.item} key={contact.id}>\r\n                        <p className={styles.contact}>\r\n                            <span className={styles.name}>{contact.name}:</span>\r\n                            <span className={styles.number}>{contact.number}</span>\r\n                        </p>\r\n                            <button className={styles.btn} type=\"button\" onClick={() => onRemoveContact(contact.id)}>x</button>\r\n                    </li>\r\n                ))}\r\n        </>\r\n    ); \r\n}\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport ContactListItem from '../contactListItem/ContactListItem';\r\nimport styles from './ContactList.module.css';\r\n\r\nfunction ContactList({contacts, onRemoveContact}) {\r\n    return (\r\n        <div className={styles.container}>\r\n            {contacts.length > 0 &&\r\n                <ul className={styles.list}>\r\n                <ContactListItem contacts={contacts} onRemoveContact={onRemoveContact}/>\r\n                </ul>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from '../contactForm/ContactForm';\r\nimport Filter from '../filter/Filter';\r\nimport ContactList from '../contactList/ContactList';\r\nimport styles from './App.module.css';\r\n\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        contacts: [],\r\n        filter: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        const persistedContacts = localStorage.getItem('contacts')\r\n\r\n        if (persistedContacts) {\r\n            this.setState({\r\n                contacts: JSON.parse(persistedContacts)\r\n            });\r\n        };\r\n    };\r\n\r\n    componentDidUpdate(prevState) {\r\n        if (prevState.contacts !== this.state.contacts) {\r\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n        }\r\n    };\r\n\r\n    changeFilter = filter => {\r\n        this.setState({ filter })\r\n    };\r\n    \r\n    \r\n    addContact = (person) => {\r\n\r\n        const contact = {\r\n            id: uuidv4(),\r\n            ...person\r\n        };\r\n        this.setState(prevState => {\r\n            return {\r\n                contacts: [...prevState.contacts, contact]\r\n            }\r\n        })\r\n    };\r\n    \r\n    removeContact = contactId => {\r\n        this.setState(prevState => {\r\n            return {\r\n                contacts: prevState.contacts.filter(({ id }) => id !== contactId)\r\n            }\r\n        })\r\n    }\r\n\r\n    getVisibleContacts = () => {\r\n        const { contacts, filter } = this.state;\r\n    \r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase())\r\n        );\r\n    };\r\n    \r\n    render() {\r\n        const { contacts, filter } = this.state;\r\n        const visibleContacts = this.getVisibleContacts();\r\n        \r\n        return (\r\n            <div className={styles.container}>\r\n                <h1 className={styles.tytle}>Phonebook</h1>\r\n                <ContactForm addContact={this.addContact} contacts={contacts}/>\r\n                <h2 className={styles.tytle}>Contacts</h2>\r\n                <Filter filter={filter} onChange={this.changeFilter} />\r\n                {visibleContacts.length > 0 && (\r\n                    <ContactList contacts={visibleContacts} onRemoveContact={this.removeContact} />\r\n                )}          \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__37MgD\",\"contact\":\"ContactListItem_contact__4mQou\",\"number\":\"ContactListItem_number__2D8Wo\",\"name\":\"ContactListItem_name__2vykn\",\"btn\":\"ContactListItem_btn__2-uK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1lfOW\",\"tytle\":\"App_tytle__3QLzI\"};"],"sourceRoot":""}